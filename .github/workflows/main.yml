name: Build Kernel 

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  Build:
    runs-on: ubuntu-20.04
    steps:
      
    - name: Cleanup
      uses: rokibhasansagar/slimhub_actions@main

    - name: Prepare the environment
      run: |
        sudo apt update
        sudo apt -y upgrade
        sudo apt -y install gperf gcc-multilib gcc-10-multilib g++-multilib g++-10-multilib libc6-dev lib32ncurses5-dev x11proto-core-dev libx11-dev tree lib32z-dev libgl1-mesa-dev libxml2-utils xsltproc bc ccache lib32readline-dev lib32z1-dev liblz4-tool libncurses5-dev libsdl1.2-dev libssl-dev libwxgtk3.0-gtk3-dev libxml2 lzop pngcrush schedtool squashfs-tools imagemagick libbz2-dev lzma ncftp qemu-user-static libstdc++-10-dev python-is-python3
        sudo apt -y install git
        git config --global user.name "worker"
        git config --global user.email "worker@workflow.com"
        
    - name: Install Python
      run: |
        sudo apt install software-properties-common -y
        sudo add-apt-repository ppa:deadsnakes/ppa -y
        sudo apt install python3.8 -y
          
    - name: Sync Kernel
      run: |
        git clone https://github.com/${{ github.repository }} -j$(nproc --all) -b main --depth=1 kernel
      
    - name: Sync Toolchain
      run: |
        git clone https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/ -j$(nproc --all) -b android11-qpr2-release --depth=1 kernel/clang
        git clone https://android.googlesource.com/platform/prebuilts/gcc/linux-x86/aarch64/aarch64-linux-android-4.9/ -b android11-qpr2-release --depth=1 kernel/gcc
     
    - name: Build Kernel
      run: |
        cd kernel
        # Export ARCH/SUBARCH flags.
        export ARCH="arm64"
        export SUBARCH="arm64"
        
        # Export toolchain/clang/llvm flags
        export CROSS_COMPILE="$(pwd)/toolchain/gcc/bin/aarch64-linux-android-"
        export CLANG_TRIPLE="aarch64-linux-android-"
        export CC="$(pwd)/toolchain/clang/clang-r383902/bin/clang"
        
        mkdir out
        make O="$(pwd)/out" a3core_eur_open_defconfig
        make -j`nproc` O="$(pwd)/out"

    - uses: actions/upload-artifact@v4
      with:
        name: Image.gz
        path: /home/runner/work/a032m-T-u33/a032m-T-u33/kernel/out/arch/arm64/boot/Image.gz
